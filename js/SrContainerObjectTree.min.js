document.addEventListener("DOMContentLoaded",()=>{class a{constructor({container_ref_id:a,el:b,empty_text:c,error_text:d,fetch_url:e}){this.container_ref_id=a,this.el=b,this.empty_text=c,this.error_text=d,this.fetch_url=e}async clickNode({arrow_el:a,children_el:b,ref_id:c}){a.classList.toggle("SrContainerObjectTreeArrowOpen"),0===b.children.length&&(await this.fetchTree({parent_el:b,parent_ref_id:c}))}async fetchTree({parent_el:a,parent_ref_id:b}){const c=document.createElement("div");c.classList.add("SrContainerObjectTreeLoading"),a.appendChild(c);let d;try{d=await(await fetch(`${this.fetch_url}${b}`,{headers:{accept:"application/js","content-type":"application/js"}})).json()}catch(b){console.error(b);const c=document.createElement("div");return c.classList.add("SrContainerObjectTreeError"),c.innerText=this.error_text,void a.appendChild(c)}finally{a.removeChild(c)}if(0<d.length)for(const{count_sub_children_types:b,description:c,icon:e,is_container:f,link:g,ref_id:h,title:i}of d){const d=document.createElement("div");d.classList.add("SrContainerObjectTreeNode");const j=document.createElement("div");if(j.classList.add("SrContainerObjectTreeChildren"),f){const a=document.createElement("div");a.classList.add("SrContainerObjectTreeArrow"),a.addEventListener("click",this.clickNode.bind(this,{arrow_el:a,children_el:j,ref_id:h})),d.appendChild(a)}const k=document.createElement("a");k.classList.add("SrContainerObjectTreeLink"),k.href=g;const l=document.createElement("img");l.classList.add("SrContainerObjectTreeIcon"),l.src=e,k.appendChild(l);const m=document.createElement("div");if(m.classList.add("SrContainerObjectTreeTitle"),m.innerText=i,k.appendChild(m),d.appendChild(k),c){const a=document.createElement("div");a.classList.add("SrContainerObjectTreeDescription"),a.innerText=c,d.appendChild(a)}if(f&&0<b.length){const a=document.createElement("div");a.classList.add("SrContainerObjectTreeCountSubChildrenTypes"),a.innerText=b.map(({count:a,type_title:b})=>`${a} ${b}`).join(", "),d.appendChild(a)}f&&d.appendChild(j),a.appendChild(d)}else{const b=document.createElement("div");b.classList.add("SrContainerObjectTreeEmpty"),b.innerText=this.empty_text,a.appendChild(b)}}async init(){await this.fetchTree({parent_el:this.el,parent_ref_id:this.container_ref_id})}}for(const b of document.querySelectorAll(".SrContainerObjectTree")){const c=JSON.parse(atob(b.dataset.srcontainerobjecttree));c.el=b;const d=new a(c);d.init()}});

{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tree from '@naisutech/react-tree';\nimport PropTypes from \"prop-types\";\nimport './styles.css';\n\nclass CurriculumTreeSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      nodesOfTreeSection: []\n    };\n    console.log(\"TEST\");\n    this.key = props.startNodeId;\n  }\n\n  loadTree() {\n    console.log(this.props.urlTreeService + \"&node_id=\" + this.props.startNodeId);\n    fetch(this.props.urlTreeService + \"&node_id=\" + this.props.startNodeId).then(res => JSON.parse(res.text())).then(json => {\n      console.log('tteeee');\n      console.log(json);\n      this.setState({\n        isLoaded: true,\n        nodesOfTreeSection: json\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoaded,\n      nodesOfTreeSection\n    } = this.state;\n\n    if (isLoaded) {\n      console.log(nodesOfTreeSection);\n      return nodesOfTreeSection;\n    } else {\n      this.loadTree();\n      return 'loading';\n    }\n  }\n\n}\n\nexport default CurriculumTreeSection;\nCurriculumTreeSection.propTypes = {\n  urlTreeService: PropTypes.string.isRequired,\n  startNodeId: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTreeSection.js"],"names":["React","ReactDOM","Tree","PropTypes","CurriculumTreeSection","Component","constructor","props","state","isLoaded","nodesOfTreeSection","console","log","key","startNodeId","loadTree","urlTreeService","fetch","then","res","JSON","parse","text","json","setState","render","propTypes","string","isRequired","number"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;AAEA,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAElDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,kBAAkB,EAAE;AAFV,KAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,SAAKC,GAAL,GAAWN,KAAK,CAACO,WAAjB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWS,cAAX,GAA4B,WAA5B,GAAwC,KAAKT,KAAL,CAAWO,WAA/D;AACAG,IAAAA,KAAK,CAAC,KAAKV,KAAL,CAAWS,cAAX,GAA4B,WAA5B,GAAwC,KAAKT,KAAL,CAAWO,WAApD,CAAL,CACCI,IADD,CACMC,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACG,IAAJ,EAAX,CADb,EAECJ,IAFD,CAEMK,IAAI,IAAI;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,WAAKC,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,kBAAkB,EAAEa;AAFR,OAAd;AAID,KATD;AAUD;;AAGDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAChB,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAiC,KAAKF,KAA5C;;AAEA,QAAIC,QAAJ,EAAc;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ;AACA,aACEA,kBADF;AAGD,KALD,MAKO;AACL,WAAKK,QAAL;AACA,aAAO,SAAP;AACD;AACF;;AAxCiD;;AA2CpD,eAAeX,qBAAf;AAEAA,qBAAqB,CAACsB,SAAtB,GAAkC;AAChCV,EAAAA,cAAc,EAAEb,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAEhCd,EAAAA,WAAW,EAAEX,SAAS,CAAC0B,MAAV,CAAiBD;AAFE,CAAlC","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Tree from '@naisutech/react-tree'\nimport PropTypes from \"prop-types\";\n\nimport './styles.css'\n\nclass CurriculumTreeSection extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       isLoaded: false,\n       nodesOfTreeSection: []\n    }\n    console.log(\"TEST\")\n\n    this.key = props.startNodeId;\n  }\n\n  loadTree() {\n    console.log(this.props.urlTreeService + \"&node_id=\"+this.props.startNodeId)\n    fetch(this.props.urlTreeService + \"&node_id=\"+this.props.startNodeId)\n    .then(res => JSON.parse(res.text()))\n    .then(json => {\n      console.log('tteeee')\n      console.log(json)\n      this.setState({\n        isLoaded: true,\n        nodesOfTreeSection: json\n      })\n    })\n  }\n\n\n  render() {\n    const {isLoaded, nodesOfTreeSection} = this.state;\n\n    if (isLoaded) {\n      console.log(nodesOfTreeSection)\n      return (\n        nodesOfTreeSection\n      )\n    } else {\n      this.loadTree()\n      return 'loading'\n    }\n  }\n}\n\nexport default CurriculumTreeSection;\n\nCurriculumTreeSection.propTypes = {\n  urlTreeService: PropTypes.string.isRequired,\n  startNodeId: PropTypes.number.isRequired\n};\n\n"]},"metadata":{},"sourceType":"module"}
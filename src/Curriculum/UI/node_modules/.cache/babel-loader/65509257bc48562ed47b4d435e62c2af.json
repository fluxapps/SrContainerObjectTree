{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js\";\nimport React from 'react';\nimport './styles.css';\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlTreeService: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: document.getElementById('treeservice-nodeid').textContent,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    };\n  }\n\n  loadTreeSection(nodeIdToLoad, loadedTreeNodeIds, nodesOfTree) {\n    console.log(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad);\n    fetch(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad).then(res => res.json()).then(json => {\n      this.setState({\n        loadedTreeNodeIds: [...loadedTreeNodeIds, nodeIdToLoad],\n        nodesOfTree: json\n      });\n    });\n  }\n\n  onSelect(selectedNode) {\n    this.setState({\n      nodeIdToLoad: selectedNode.NODEID\n    });\n  }\n\n  render() {\n    const {\n      urlTreeService,\n      nodeIdToLoad,\n      loadedTreeNodeIds,\n      nodesOfTree\n    } = this.state;\n    console.log(loadedTreeNodeIds);\n    console.log(nodeIdToLoad);\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      console.log(\"HEUREKA\");\n      console.log(nodesOfTree);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tree, {\n        nodes: nodesOfTree,\n        showEmptyItems: true,\n        size: \"half\",\n        theme: 'light',\n        onSelect: onSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      console.log(\"load teree section\");\n      this.loadTreeSection(nodeIdToLoad, loadedTreeNodeIds, nodesOfTree);\n      console.log(\"loading\");\n      return \"loading\";\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) {\n    return loadedTreeNodeIds.indexOf(nodeIdToLoad) >= 0;\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","Tree","CurriculumTree","Component","constructor","props","state","urlTreeService","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","loadTreeSection","console","log","fetch","then","res","json","setState","onSelect","selectedNode","NODEID","render","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","indexOf","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      urlTreeService: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: document.getElementById('treeservice-nodeid').textContent,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n  loadTreeSection(nodeIdToLoad,\n                  loadedTreeNodeIds,\n                  nodesOfTree) {\n    console.log(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad);\n    fetch(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        loadedTreeNodeIds: [ ...loadedTreeNodeIds, nodeIdToLoad],\n          nodesOfTree: json\n      })\n\n    })\n  }\n\n  onSelect(selectedNode) {\n      this.setState({nodeIdToLoad:selectedNode.NODEID})\n  }\n\n\n  render() {\n    const { urlTreeService, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree } = this.state;\n    console.log(loadedTreeNodeIds)\n    console.log(nodeIdToLoad)\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      console.log(\"HEUREKA\")\n      console.log(nodesOfTree);\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n            <Tree nodes={nodesOfTree} showEmptyItems size=\"half\" theme={'light'} onSelect={onSelect}/>\n          </div>\n        </div>\n      )\n    } else {\n      console.log(\"load teree section\")\n      this.loadTreeSection(\n        nodeIdToLoad, loadedTreeNodeIds, nodesOfTree\n      )\n      console.log(\"loading\")\n      return \"loading\"\n    }\n  }\n\n\n\n  checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) {\n    return loadedTreeNodeIds.indexOf(nodeIdToLoad) >= 0\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CurriculumTreeSection from './CurriculumTreeSection';\nimport './styles.css';\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: document.getElementById('treeservice-nodeid').textContent,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    };\n  }\n\n  render() {\n    const {\n      urlTreeservice,\n      nodeIdToLoad,\n      loadedTreeNodeIds,\n      nodesOfTree\n    } = this.state;\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, nodesOfTree));\n    } else {\n      const {\n        urlTreeservice,\n        nodeIdToLoad,\n        loadedTreeNodeIds,\n        nodesOfTree\n      } = this.state;\n\n      const nodes = ({\n        sections\n      }) => /*#__PURE__*/React.createElement(Tree, {\n        nodes: sections.map(section => /*#__PURE__*/React.createElement(CurriculumTreeSection, {\n          urlTreeService: urlTreeservice,\n          startNodeId: 224,\n          showEmptyItems: true,\n          size: \"half\",\n          theme: 'light',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 36\n          }\n        })),\n        showEmptyItems: true,\n        size: \"half\",\n        theme: 'light',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }); // Add item to it\n\n\n      loadedTreeNodeIds.push({\n        value: nodeIdToLoad\n      });\n      nodesOfTree.push({\n        value: nodes\n      }); // Set state\n      // this.setState({ loadedTreeNodeIds, nodesOfTree });\n      //  console.log(JSON.stringify(this.state))\n\n      return \"loading\";\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    console.log(NodeId in loadedTreeNodeIds);\n    return NodeId in loadedTreeNodeIds;\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","ReactDOM","CurriculumTreeSection","Tree","CurriculumTree","Component","constructor","props","state","urlTreeservice","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","render","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","nodes","sections","map","section","push","value","NodeId","console","log","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAD5C;AAEXC,MAAAA,YAAY,EAAEH,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,WAFjD;AAGXE,MAAAA,iBAAiB,EAAE,EAHR;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA,cAAD;AAAiBI,MAAAA,YAAjB;AAA+BC,MAAAA,iBAA/B;AAAkDC,MAAAA;AAAlD,QAAiE,KAAKP,KAA5E;;AAEA,QAAI,KAAKS,aAAL,CAAmBH,iBAAnB,EAAsCD,YAAtC,MAAwD,IAA5D,EAAkE;AAChE,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEK,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE,QAA7B;AAAuCC,UAAAA,QAAQ,EAAE;AAAjD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBH,UAAAA,OAAO,EAAE,MAAzB;AAAiCI,UAAAA,aAAa,EAAE;AAAhD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEP,WADF,CADF,CADF;AAOD,KARD,MAQO;AACL,YAAM;AAACN,QAAAA,cAAD;AAAiBI,QAAAA,YAAjB;AAA+BC,QAAAA,iBAA/B;AAAkDC,QAAAA;AAAlD,UAAiE,KAAKP,KAA5E;;AAEA,YAAMe,KAAK,GAAG,CAAC;AAACC,QAAAA;AAAD,OAAD,kBACZ,oBAAC,IAAD;AAAM,QAAA,KAAK,EACRA,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBAAI,oBAAC,qBAAD;AAAuB,UAAA,cAAc,EAAEjB,cAAvC;AAAuD,UAAA,WAAW,EAAE,GAApE;AAAyE,UAAA,cAAc,MAAvF;AAAwF,UAAA,IAAI,EAAC,MAA7F;AAAoG,UAAA,KAAK,EAAE,OAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB,CADH;AAEM,QAAA,cAAc,MAFpB;AAEqB,QAAA,IAAI,EAAC,MAF1B;AAEiC,QAAA,KAAK,EAAE,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHK,CASL;;;AACAK,MAAAA,iBAAiB,CAACa,IAAlB,CAAuB;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAAvB;AACAE,MAAAA,WAAW,CAACY,IAAZ,CAAiB;AAAEC,QAAAA,KAAK,EAAEL;AAAT,OAAjB,EAXK,CAYL;AACD;AAGD;;AACE,aAAQ,SAAR;AACD;AACF;;AAEDN,EAAAA,aAAa,CAACH,iBAAD,EAAoBe,MAApB,EAA4B;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,IAAIf,iBAAtB;AACA,WAAOe,MAAM,IAAIf,iBAAjB;AACD;;AAhD0C;;AAoD7C,eAAeV,cAAf;AACAA,cAAc,CAAC4B,SAAf,GAA2B,EAA3B","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CurriculumTreeSection from './CurriculumTreeSection'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: document.getElementById('treeservice-nodeid').textContent,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n\n  render() {\n    const {urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree} = this.state;\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n           {nodesOfTree}\n          </div>\n        </div>\n      )\n    } else {\n      const {urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree} = this.state;\n\n      const nodes = ({sections}) => (\n        <Tree nodes=\n          {sections.map(section => <CurriculumTreeSection urlTreeService={urlTreeservice} startNodeId={224} showEmptyItems size=\"half\" theme={'light'} />)}\n              showEmptyItems size=\"half\" theme={'light'}/>\n      );\n\n      // Add item to it\n      loadedTreeNodeIds.push({ value: nodeIdToLoad });\n      nodesOfTree.push({ value: nodes });\n      // Set state\n     // this.setState({ loadedTreeNodeIds, nodesOfTree });\n\n\n    //  console.log(JSON.stringify(this.state))\n      return (\"loading\")\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    console.log(NodeId in loadedTreeNodeIds)\n    return NodeId in loadedTreeNodeIds\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTreeSection.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tree from '@naisutech/react-tree';\nimport PropTypes from \"prop-types\";\nimport './styles.css';\n\nclass CurriculumTreeSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloaded: false,\n      nodesOfTree: []\n    };\n    this.key = props.startNodeId;\n  }\n\n  loadTree() {\n    fetch(this.props.urlTreeService + \"&node_id=\" + this.props.startNodeId).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        nodesOfTree: json.nodesOfTree\n      });\n    });\n  }\n\n  render() {\n    const {\n      isloaded,\n      nodesOfTree\n    } = this.state;\n\n    if (isloaded) {\n      return /*#__PURE__*/React.createElement(Tree, {\n        nodes: nodesOfTree,\n        showEmptyItems: true,\n        size: \"half\",\n        theme: 'light',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      });\n    } else {\n      this.loadTree();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, \"loading\");\n    }\n  }\n\n}\n\nexport default CurriculumTreeSection;\nCurriculumTreeSection.propTypes = {\n  urlTreeService: PropTypes.string.isRequired,\n  startNodeId: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTreeSection.js"],"names":["React","ReactDOM","Tree","PropTypes","CurriculumTreeSection","Component","constructor","props","state","isloaded","nodesOfTree","key","startNodeId","loadTree","fetch","urlTreeService","then","res","json","setState","isLoaded","render","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;AAEA,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAElDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,WAAW,EAAE;AAFH,KAAb;AAKA,SAAKC,GAAL,GAAWJ,KAAK,CAACK,WAAjB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACTC,IAAAA,KAAK,CAAC,KAAKP,KAAL,CAAWQ,cAAX,GAA4B,WAA5B,GAAwC,KAAKR,KAAL,CAAWK,WAApD,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZV,QAAAA,WAAW,EAAEQ,IAAI,CAACR;AAFN,OAAd;AAID,KAPD;AAQD;;AAGDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAACZ,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0B,KAAKF,KAArC;;AAEA,QAAIC,QAAJ,EAAc;AACZ,0BACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,WAAb;AAA0B,QAAA,cAAc,MAAxC;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAqD,QAAA,KAAK,EAAE,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAGD,KAJD,MAIO;AACX,WAAKG,QAAL;AACM,0BAAO;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAGD;AACF;;AArCiD;;AAwCpD,eAAeT,qBAAf;AAEAA,qBAAqB,CAACkB,SAAtB,GAAkC;AAChCP,EAAAA,cAAc,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UADD;AAEhCZ,EAAAA,WAAW,EAAET,SAAS,CAACsB,MAAV,CAAiBD;AAFE,CAAlC","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Tree from '@naisutech/react-tree'\nimport PropTypes from \"prop-types\";\n\nimport './styles.css'\n\nclass CurriculumTreeSection extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       isloaded: false,\n       nodesOfTree: []\n    }\n\n    this.key = props.startNodeId;\n  }\n\n  loadTree() {\n    fetch(this.props.urlTreeService + \"&node_id=\"+this.props.startNodeId)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        isLoaded: true,\n        nodesOfTree: json.nodesOfTree\n      })\n    })\n  }\n\n\n  render() {\n    const {isloaded, nodesOfTree} = this.state;\n\n    if (isloaded) {\n      return (\n            <Tree nodes={nodesOfTree} showEmptyItems size=\"half\" theme={'light'}/>\n      )\n    } else {\nthis.loadTree()\n      return <div className=\"showtree\">\n        loading\n      </div>\n    }\n  }\n}\n\nexport default CurriculumTreeSection;\n\nCurriculumTreeSection.propTypes = {\n  urlTreeService: PropTypes.string.isRequired,\n  startNodeId: PropTypes.number.isRequired\n};"]},"metadata":{},"sourceType":"module"}
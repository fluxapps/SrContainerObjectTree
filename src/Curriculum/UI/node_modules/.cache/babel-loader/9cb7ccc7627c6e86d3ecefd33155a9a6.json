{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CurriculumTreeSection from './CurriculumTreeSection';\nimport './styles.css';\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 224,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    };\n  }\n\n  renderTreeSection() {\n    var section = new CurriculumTreeSection({\n      urlTreeService: this.state.urlTreeservice\n    }, {\n      startNodeId: this.state.nodeIdToLoad\n    }).render();\n    console.log(JSON.stringify(section));\n    const currentLoadedTreeNodeIds = this.state.loadedTreeNodeIds;\n    currentLoadedTreeNodeIds.push(this.state.startNodeId);\n    console.log(currentLoadedTreeNodeIds);\n    console.log(JSON.stringify(this.state));\n    const currentNodesOfTree = this.state.nodesOfTree;\n    currentNodesOfTree.push(section); // Set state\n\n    this.setState({\n      currentLoadedTreeNodeIds,\n      currentNodesOfTree\n    });\n  }\n\n  render() {\n    const {\n      urlTreeservice,\n      nodeIdToLoad,\n      loadedTreeNodeIds,\n      nodesOfTree\n    } = this.state;\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad));\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, nodesOfTree));\n    } else {\n      this.renderTreeSection(urlTreeservice, nodeIdToLoad);\n      return \"loading\";\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    return loadedTreeNodeIds.includes(NodeId);\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","ReactDOM","CurriculumTreeSection","Tree","CurriculumTree","Component","constructor","props","state","urlTreeservice","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","renderTreeSection","section","urlTreeService","startNodeId","render","console","log","JSON","stringify","currentLoadedTreeNodeIds","push","currentNodesOfTree","setState","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","NodeId","includes","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAD5C;AAEXC,MAAAA,YAAY,EAAE,GAFH;AAGXC,MAAAA,iBAAiB,EAAE,EAHR;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,OAAO,GAAG,IAAIf,qBAAJ,CAA0B;AAACgB,MAAAA,cAAc,EAAE,KAAKV,KAAL,CAAWC;AAA5B,KAA1B,EAAsE;AAACU,MAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWK;AAAzB,KAAtE,EAA8GO,MAA9G,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAAZ;AACA,UAAMQ,wBAAwB,GAAG,KAAKjB,KAAL,CAAWM,iBAA5C;AACAW,IAAAA,wBAAwB,CAACC,IAAzB,CAA+B,KAAKlB,KAAL,CAAWW,WAA1C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYG,wBAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAApB,CAAZ;AAEA,UAAMmB,kBAAkB,GAAG,KAAKnB,KAAL,CAAWO,WAAtC;AACAY,IAAAA,kBAAkB,CAACD,IAAnB,CAAwBT,OAAxB,EAVkB,CAWlB;;AACA,SAAKW,QAAL,CAAc;AAAEH,MAAAA,wBAAF;AAA4BE,MAAAA;AAA5B,KAAd;AACD;;AAGDP,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,cAAF;AAAkBI,MAAAA,YAAlB;AAAgCC,MAAAA,iBAAhC;AAAmDC,MAAAA;AAAnD,QAAmE,KAAKP,KAA9E;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,aAAL,CAAmBf,iBAAnB,EAAsCD,YAAtC,CAAZ;;AACA,QAAI,KAAKgB,aAAL,CAAmBf,iBAAnB,EAAsCD,YAAtC,MAAwD,IAA5D,EAAkE;AAChE,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEiB,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE,QAA7B;AAAuCC,UAAAA,QAAQ,EAAE;AAAjD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBH,UAAAA,OAAO,EAAE,MAAzB;AAAiCI,UAAAA,aAAa,EAAE;AAAhD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnB,WADH,CADF,CADF;AAOD,KARD,MAQO;AACL,WAAKC,iBAAL,CAAuBP,cAAvB,EAAuCI,YAAvC;AAEA,aAAO,SAAP;AAGD;AACF;;AAGDgB,EAAAA,aAAa,CAACf,iBAAD,EAAoBqB,MAApB,EAA4B;AACvC,WAAOrB,iBAAiB,CAACsB,QAAlB,CAA2BD,MAA3B,CAAP;AACD;;AArD0C;;AAyD7C,eAAe/B,cAAf;AACAA,cAAc,CAACiC,SAAf,GAA2B,EAA3B","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CurriculumTreeSection from './CurriculumTreeSection'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 224,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n  renderTreeSection() {\n\n    var section = new CurriculumTreeSection({urlTreeService: this.state.urlTreeservice},{startNodeId: this.state.nodeIdToLoad}).render();\n    console.log(JSON.stringify(section))\n    const currentLoadedTreeNodeIds = this.state.loadedTreeNodeIds\n    currentLoadedTreeNodeIds.push( this.state.startNodeId );\n    console.log(currentLoadedTreeNodeIds)\n    console.log(JSON.stringify(this.state))\n\n    const currentNodesOfTree = this.state.nodesOfTree\n    currentNodesOfTree.push(section);\n    // Set state\n    this.setState({ currentLoadedTreeNodeIds, currentNodesOfTree });\n  }\n\n\n  render() {\n    const { urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree } = this.state;\n\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad))\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n            {nodesOfTree}\n          </div>\n        </div>\n      )\n    } else {\n      this.renderTreeSection(urlTreeservice, nodeIdToLoad)\n\n      return \"loading\"\n\n\n    }\n  }\n\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    return loadedTreeNodeIds.includes(NodeId)\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import CurriculumTreeSection from'./CurriculumTreeSection';import'./styles.css';import Tree from'@naisutech/react-tree';var CurriculumTree=/*#__PURE__*/function(_React$Component){_inherits(CurriculumTree,_React$Component);var _super=_createSuper(CurriculumTree);function CurriculumTree(props){var _this;_classCallCheck(this,CurriculumTree);_this=_super.call(this,props);_this.state={urlTreeService:document.getElementById('treeservice').textContent,nodeIdToLoad:2936,loadedTreeNodeIds:[],nodesOfTree:[]};return _this;}_createClass(CurriculumTree,[{key:\"loadTreeSection\",value:function loadTreeSection(nodeIdToLoad,loadedTreeNodeIds,nodesOfTree){var _this2=this;console.log(this.state.urlTreeService+\"&node_id=\"+nodeIdToLoad);fetch(this.state.urlTreeService+\"&node_id=\"+nodeIdToLoad).then(function(res){return res.json();}).then(function(json){console.log('tteeee');console.log(json);_this2.setState({loadedTreeNodeIds:loadedTreeNodeIds.push(nodeIdToLoad),nodesOfTree:nodesOfTree.push(json.nodesOfTree)});});}},{key:\"render\",value:function render(){var _this$state=this.state,urlTreeservice=_this$state.urlTreeservice,nodeIdToLoad=_this$state.nodeIdToLoad,loadedTreeNodeIds=_this$state.loadedTreeNodeIds,nodesOfTree=_this$state.nodesOfTree;console.log(this.checkIfLoaded(loadedTreeNodeIds,nodeIdToLoad));if(this.checkIfLoaded(loadedTreeNodeIds,nodeIdToLoad)===true){console.log(\"HEUREKA\");console.log(nodesOfTree);return/*#__PURE__*/React.createElement(\"div\",{className:\"showtree\",style:{display:'flex',flexWrap:'nowrap',flexGrow:1}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'50%',display:'flex',flexDirection:'column'}},nodesOfTree));}else{this.loadTreeSection(nodeIdToLoad,loadedTreeNodeIds,nodesOfTree);return\"loading\";}}/*\n      const section = (\n        <CurriculumTreeSection urlTreeService={urlTreeservice} startNodeId={nodeIdToLoad} />)\n      console.log(section)\n\n\n\n      loadedTreeNodeIds.push( nodeIdToLoad );\n      nodesOfTree.push(section);\n      // Set state\n      this.setState({ loadedTreeNodeIds:loadedTreeNodeIds, nodesOfTree:nodesOfTree });\n\n      return \"loading\"\n    }\n  }\n*/},{key:\"checkIfLoaded\",value:function checkIfLoaded(loadedTreeNodeIds,nodeIdToLoad){console.log(loadedTreeNodeIds);console.log('tttt');console.log(loadedTreeNodeIds.indexOf(nodeIdToLoad));console.log('tttt');return loadedTreeNodeIds.indexOf(nodeIdToLoad)>=0?true:false;}}]);return CurriculumTree;}(React.Component);export default CurriculumTree;","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","ReactDOM","CurriculumTreeSection","Tree","CurriculumTree","props","state","urlTreeService","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","console","log","fetch","then","res","json","setState","push","urlTreeservice","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","loadTreeSection","indexOf","Component"],"mappings":"wjCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CAEA,MAAO,cAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,C,GAEMC,CAAAA,c,4HAEJ,wBAAYC,KAAZ,CAAmB,gDACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,cAAc,CAAEC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAD5C,CAEXC,YAAY,CAAE,IAFH,CAGXC,iBAAiB,CAAE,EAHR,CAIXC,WAAW,CAAE,EAJF,CAAb,CAHiB,aASlB,C,mFAEeF,Y,CACAC,iB,CACAC,W,CAAa,iBAC3BC,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,cAAX,CAA4B,WAA5B,CAA0CI,YAAtD,EACAK,KAAK,CAAC,KAAKV,KAAL,CAAWC,cAAX,CAA4B,WAA5B,CAA0CI,YAA3C,CAAL,CACCM,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAE,IAAI,CAAI,CACZL,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAD,OAAO,CAACC,GAAR,CAAYI,IAAZ,EACA,MAAI,CAACC,QAAL,CAAc,CACZR,iBAAiB,CAAEA,iBAAiB,CAACS,IAAlB,CAAuBV,YAAvB,CADP,CAEZE,WAAW,CAAEA,WAAW,CAACQ,IAAZ,CAAiBF,IAAI,CAACN,WAAtB,CAFD,CAAd,EAID,CATD,EAUD,C,uCAGQ,iBACkE,KAAKP,KADvE,CACCgB,cADD,aACCA,cADD,CACiBX,YADjB,aACiBA,YADjB,CAC+BC,iBAD/B,aAC+BA,iBAD/B,CACkDC,WADlD,aACkDA,WADlD,CAGPC,OAAO,CAACC,GAAR,CAAY,KAAKQ,aAAL,CAAmBX,iBAAnB,CAAsCD,YAAtC,CAAZ,EACA,GAAI,KAAKY,aAAL,CAAmBX,iBAAnB,CAAsCD,YAAtC,IAAwD,IAA5D,CAAkE,CAChEG,OAAO,CAACC,GAAR,CAAY,SAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,WAAZ,EACA,mBACE,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAX,CAAmBC,QAAQ,CAAE,QAA7B,CAAuCC,QAAQ,CAAE,CAAjD,CAAjC,eACE,2BAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAgBH,OAAO,CAAE,MAAzB,CAAiCI,aAAa,CAAE,QAAhD,CAAZ,EACGf,WADH,CADF,CADF,CAOD,CAVD,IAUO,CACL,KAAKgB,eAAL,CACElB,YADF,CACgBC,iBADhB,CACmCC,WADnC,EAGA,MAAO,SAAP,CACD,CACF,CAEG;;;;;;;;;;;;;;;sDAiBUD,iB,CAAmBD,Y,CAAc,CAC7CG,OAAO,CAACC,GAAR,CAAYH,iBAAZ,EACAE,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,iBAAiB,CAACkB,OAAlB,CAA0BnB,YAA1B,CAAZ,EACAG,OAAO,CAACC,GAAR,CAAY,MAAZ,EACA,MAAOH,CAAAA,iBAAiB,CAACkB,OAAlB,CAA0BnB,YAA1B,GAA2C,CAA3C,CAA8C,IAA9C,CAAoD,KAA3D,CACD,C,4BA3E0BX,KAAK,CAAC+B,S,EA+EnC,cAAe3B,CAAAA,cAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CurriculumTreeSection from './CurriculumTreeSection'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      urlTreeService: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 2936,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n  loadTreeSection(nodeIdToLoad,\n                  loadedTreeNodeIds,\n                  nodesOfTree) {\n    console.log(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad)\n    fetch(this.state.urlTreeService + \"&node_id=\" + nodeIdToLoad)\n    .then(res => res.json())\n    .then(json => {\n      console.log('tteeee')\n      console.log(json)\n      this.setState({\n        loadedTreeNodeIds: loadedTreeNodeIds.push(nodeIdToLoad),\n        nodesOfTree: nodesOfTree.push(json.nodesOfTree)\n      })\n    })\n  }\n\n\n  render() {\n    const { urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree } = this.state;\n\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad))\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      console.log(\"HEUREKA\")\n      console.log(nodesOfTree);\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n            {nodesOfTree}\n          </div>\n        </div>\n      )\n    } else {\n      this.loadTreeSection(\n        nodeIdToLoad, loadedTreeNodeIds, nodesOfTree\n      )\n      return \"loading\"\n    }\n  }\n\n      /*\n      const section = (\n        <CurriculumTreeSection urlTreeService={urlTreeservice} startNodeId={nodeIdToLoad} />)\n      console.log(section)\n\n\n\n      loadedTreeNodeIds.push( nodeIdToLoad );\n      nodesOfTree.push(section);\n      // Set state\n      this.setState({ loadedTreeNodeIds:loadedTreeNodeIds, nodesOfTree:nodesOfTree });\n\n      return \"loading\"\n    }\n  }\n*/\n\n  checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) {\n    console.log(loadedTreeNodeIds)\n    console.log('tttt')\n    console.log(loadedTreeNodeIds.indexOf(nodeIdToLoad))\n    console.log('tttt')\n    return loadedTreeNodeIds.indexOf(nodeIdToLoad) >= 0? true: false\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CurriculumTreeSection from './CurriculumTreeSection';\nimport './styles.css';\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 2936,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    };\n  }\n\n  loadTreeSection(nodeIdToLoad) {\n    console.log(this.props.urlTreeService + \"&node_id=\" + nodeIdToLoad);\n    fetch(this.props.urlTreeService + \"&node_id=\" + nodeIdToLoad).then(res => res.json()).then(json => {\n      console.log('tteeee');\n      console.log(json);\n      this.setState({\n        loadedTreeNodeIds: loadedTreeNodeIds.push(nodeIdToLoad),\n        nodesOfTree: nodesOfTree.push(json)\n      });\n    });\n  }\n\n  render() {\n    const {\n      urlTreeservice,\n      nodeIdToLoad,\n      loadedTreeNodeIds,\n      nodesOfTree\n    } = this.state;\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad));\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      console.log(\"HEUREKA\");\n      console.log(nodesOfTree);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, nodesOfTree));\n    } else {\n      loadTreeSection;\n      const section = /*#__PURE__*/React.createElement(CurriculumTreeSection, {\n        urlTreeService: urlTreeservice,\n        startNodeId: nodeIdToLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      });\n      console.log(section);\n      loadedTreeNodeIds.push(nodeIdToLoad);\n      nodesOfTree.push(section); // Set state\n\n      this.setState({\n        loadedTreeNodeIds: loadedTreeNodeIds,\n        nodesOfTree: nodesOfTree\n      });\n      return \"loading\";\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) {\n    console.log(loadedTreeNodeIds);\n    console.log('tttt');\n    console.log(loadedTreeNodeIds.indexOf(nodeIdToLoad));\n    console.log('tttt');\n    return loadedTreeNodeIds.indexOf(nodeIdToLoad) >= 0 ? true : false;\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","ReactDOM","CurriculumTreeSection","Tree","CurriculumTree","Component","constructor","props","state","urlTreeservice","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","loadTreeSection","console","log","urlTreeService","fetch","then","res","json","setState","push","render","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","section","indexOf","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CurriculumTreeSection from './CurriculumTreeSection'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 2936,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n  loadTreeSection(nodeIdToLoad) {\n    console.log(this.props.urlTreeService + \"&node_id=\"+nodeIdToLoad)\n    fetch(this.props.urlTreeService + \"&node_id=\"+nodeIdToLoad)\n    .then(res => res.json())\n    .then(json => {\n      console.log('tteeee')\n      console.log(json)\n      this.setState({\n        loadedTreeNodeIds: loadedTreeNodeIds.push(nodeIdToLoad),\n        nodesOfTree: nodesOfTree.push(json)\n      })\n    })\n  }\n\n\n\n  render() {\n    const { urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree } = this.state;\n\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad))\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      console.log(\"HEUREKA\")\n      console.log(nodesOfTree);\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n            {nodesOfTree}\n          </div>\n        </div>\n      )\n    } else {\n      loadTreeSection\n      const section = (\n        <CurriculumTreeSection urlTreeService={urlTreeservice} startNodeId={nodeIdToLoad} />)\n      console.log(section)\n\n\n      loadedTreeNodeIds.push( nodeIdToLoad );\n      nodesOfTree.push(section);\n      // Set state\n      this.setState({ loadedTreeNodeIds:loadedTreeNodeIds, nodesOfTree:nodesOfTree });\n\n      return \"loading\"\n    }\n  }\n\n\n  checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) {\n    console.log(loadedTreeNodeIds)\n    console.log('tttt')\n    console.log(loadedTreeNodeIds.indexOf(nodeIdToLoad))\n    console.log('tttt')\n    return loadedTreeNodeIds.indexOf(nodeIdToLoad) >= 0? true: false\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}
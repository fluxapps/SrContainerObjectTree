{"ast":null,"code":"var _jsxFileName = \"/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CurriculumTreeSection from './CurriculumTreeSection';\nimport './styles.css';\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 224,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    };\n  }\n\n  renderTreeSection(urlTreeservice, nodeIdToLoad) {\n    const nid = nodeIdToLoad;\n    const url = urlTreeservice;\n    const section = /*#__PURE__*/React.createElement(CurriculumTreeSection, {\n      urlTreeService: url,\n      startNodeId: nid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }); // console.log(JSON.stringify(section))\n\n    const currentLoadedTreeNodeIds = this.state.loadedTreeNodeIds;\n    currentLoadedTreeNodeIds.push(this.state.startNodeId); //console.log(currentLoadedTreeNodeIds)\n    //console.log(JSON.stringify(this.state))\n\n    const currentNodesOfTree = this.state.nodesOfTree;\n    currentNodesOfTree.push(section); // Set state\n\n    this.setState({\n      currentLoadedTreeNodeIds,\n      currentNodesOfTree\n    });\n  }\n\n  render() {\n    const {\n      urlTreeservice,\n      nodeIdToLoad,\n      loadedTreeNodeIds,\n      nodesOfTree\n    } = this.state;\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad));\n\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showtree\",\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, nodesOfTree));\n    } else {\n      this.renderTreeSection(urlTreeservice, nodeIdToLoad);\n    }\n  }\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    return loadedTreeNodeIds.indexOf(NodeId) > 0 ? true : false;\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {};","map":{"version":3,"sources":["/home/mstuder/Develop/ILIAS/medi/ilias/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/SrCurriculum/src/Curriculum/Infrastructure/UI/tree/src/CurriculumTree.js"],"names":["React","ReactDOM","CurriculumTreeSection","Tree","CurriculumTree","Component","constructor","props","state","urlTreeservice","document","getElementById","textContent","nodeIdToLoad","loadedTreeNodeIds","nodesOfTree","renderTreeSection","nid","url","section","currentLoadedTreeNodeIds","push","startNodeId","currentNodesOfTree","setState","render","console","log","checkIfLoaded","display","flexWrap","flexGrow","width","flexDirection","NodeId","indexOf","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAD5C;AAEXC,MAAAA,YAAY,EAAE,GAFH;AAGXC,MAAAA,iBAAiB,EAAE,EAHR;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,CAACP,cAAD,EAAiBI,YAAjB,EAA+B;AAC9C,UAAMI,GAAG,GAAGJ,YAAZ;AACA,UAAMK,GAAG,GAAGT,cAAZ;AACA,UAAMU,OAAO,gBACb,oBAAC,qBAAD;AAAuB,MAAA,cAAc,EAAED,GAAvC;AAA4C,MAAA,WAAW,EAAED,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAH8C,CAM/C;;AACC,UAAMG,wBAAwB,GAAG,KAAKZ,KAAL,CAAWM,iBAA5C;AACAM,IAAAA,wBAAwB,CAACC,IAAzB,CAA+B,KAAKb,KAAL,CAAWc,WAA1C,EAR8C,CAS9C;AACA;;AAEA,UAAMC,kBAAkB,GAAG,KAAKf,KAAL,CAAWO,WAAtC;AACAQ,IAAAA,kBAAkB,CAACF,IAAnB,CAAwBF,OAAxB,EAb8C,CAc9C;;AACA,SAAKK,QAAL,CAAc;AAAEJ,MAAAA,wBAAF;AAA4BG,MAAAA;AAA5B,KAAd;AACD;;AAGDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,cAAF;AAAkBI,MAAAA,YAAlB;AAAgCC,MAAAA,iBAAhC;AAAmDC,MAAAA;AAAnD,QAAmE,KAAKP,KAA9E;AAEAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,aAAL,CAAmBd,iBAAnB,EAAsCD,YAAtC,CAAZ;;AACA,QAAI,KAAKe,aAAL,CAAmBd,iBAAnB,EAAsCD,YAAtC,MAAwD,IAA5D,EAAkE;AAChE,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEgB,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE,QAA7B;AAAuCC,UAAAA,QAAQ,EAAE;AAAjD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBH,UAAAA,OAAO,EAAE,MAAzB;AAAiCI,UAAAA,aAAa,EAAE;AAAhD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGlB,WADH,CADF,CADF;AAOD,KARD,MAQO;AAEL,WAAKC,iBAAL,CAAuBP,cAAvB,EAAuCI,YAAvC;AAGD;AACF;;AAGDe,EAAAA,aAAa,CAACd,iBAAD,EAAoBoB,MAApB,EAA4B;AACvC,WAAOpB,iBAAiB,CAACqB,OAAlB,CAA0BD,MAA1B,IAAoC,CAApC,GAAuC,IAAvC,GAA6C,KAApD;AACD;;AAvD0C;;AA2D7C,eAAe9B,cAAf;AACAA,cAAc,CAACgC,SAAf,GAA2B,EAA3B","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CurriculumTreeSection from './CurriculumTreeSection'\n\nimport './styles.css'\nimport Tree from '@naisutech/react-tree';\n\nclass CurriculumTree extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      urlTreeservice: document.getElementById('treeservice').textContent,\n      nodeIdToLoad: 224,\n      loadedTreeNodeIds: [],\n      nodesOfTree: []\n    }\n  }\n\n  renderTreeSection(urlTreeservice, nodeIdToLoad) {\n    const nid = nodeIdToLoad\n    const url = urlTreeservice\n    const section = (\n    <CurriculumTreeSection urlTreeService={url} startNodeId={nid} />)\n\n   // console.log(JSON.stringify(section))\n    const currentLoadedTreeNodeIds = this.state.loadedTreeNodeIds\n    currentLoadedTreeNodeIds.push( this.state.startNodeId );\n    //console.log(currentLoadedTreeNodeIds)\n    //console.log(JSON.stringify(this.state))\n\n    const currentNodesOfTree = this.state.nodesOfTree\n    currentNodesOfTree.push(section);\n    // Set state\n    this.setState({ currentLoadedTreeNodeIds, currentNodesOfTree });\n  }\n\n\n  render() {\n    const { urlTreeservice, nodeIdToLoad, loadedTreeNodeIds, nodesOfTree } = this.state;\n\n    console.log(this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad))\n    if (this.checkIfLoaded(loadedTreeNodeIds, nodeIdToLoad) === true) {\n      return (\n        <div className=\"showtree\" style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n          <div style={{ width: '50%', display: 'flex', flexDirection: 'column' }}>\n            {nodesOfTree}\n          </div>\n        </div>\n      )\n    } else {\n\n      this.renderTreeSection(urlTreeservice, nodeIdToLoad)\n\n\n    }\n  }\n\n\n  checkIfLoaded(loadedTreeNodeIds, NodeId) {\n    return loadedTreeNodeIds.indexOf(NodeId) > 0? true: false\n  }\n\n}\n\nexport default CurriculumTree;\nCurriculumTree.propTypes = {}\n\n\n"]},"metadata":{},"sourceType":"module"}